name: PIPELINE API

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt --use-deprecated=legacy-resolver

      - name: Run tests
        run: python -m unittest discover -s testy -p '*_user.py'

  analyze:
    name: CodeQL Analysis
    
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      security-events: write
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  depcheck:
    name: Dependency-Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'API FLASK'
          path: '.'
          format: 'HTML'
          others: ''

      - name: Upload Dependency-Check Report
        uses: actions/upload-artifact@master
        with:
          name: Depcheck report
          path: ${{github.workspace}}/reports

  nikto_scan:
    name: Nikto Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Nikto
        run: sudo apt-get install nikto

      - name: Install ngrok
        run: |
          wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
          unzip ngrok-stable-linux-amd64.zip
          sudo mv ngrok /usr/local/bin/ngrok
          rm ngrok-stable-linux-amd64.zip

      - name: Start ngrok and get public URL
        run: |
          nohup ngrok http 8080 --log=stdout > ngrok_log.txt 2>&1 &
          sleep 10  # Wait for ngrok to be ready
          cat ngrok_log.txt | grep -Eo "http://[0-9a-z./?=_-]+" > ngrok_url.txt || echo "Ngrok URL not found"

      - name: Run Nikto Scan
        run: nikto -h $(cat ngrok_url.txt) -Format htm -output ${{ github.workspace }}/nikto-report.html

      - name: Upload Nikto Scan Report
        uses: actions/upload-artifact@v2
        with:
          name: nikto-report
          path: ${{ github.workspace }}/nikto-report.html
